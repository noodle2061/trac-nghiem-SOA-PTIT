Câu 1. Độ mịn dịch vụ ảnh hưởng đến điều gì trong dịch vụ web?
==A. Khả năng tái sử dụng và tính linh hoạt của dịch vụ
B. Khả năng mở rộng và tương tác giữa các dịch vụ
C. Khả năng hiệu suất và bảo mật của dịch vụ
D. Khả năng kết nối và tương tác với người dùng

Câu 2. Ví dụ nào dưới đây là không phải là 1 dịch vụ web đơn giản?
A. Xem thông tin thời tiết
B. Lấy thông tin tỷ giá
C. Lấy thông tin báo giá
==D. Kiếm tra sự sãn có của một mặt hàng đã biết

Câu 3. Chất lượng dịch vụ (QoS) được đánh giá chính qua yếu tố nào ?
A. Độ mịn của dịch vụ
B. Độ tương thích của dịch vụ
C. Sự đáng tin cậy của dịch vụ
==D. Sự hài lòng của khách hàng

Câu 4. Dịch vụ loại nào thường có phạm vi chức năng nhỏ và có yêu cầu xử lý và triển khai cụ thể?
A. Task service
==B. Microservice
C. Entity service
D. Utility service

Câu 5. Mục đích của bước phân tách chức năng trong phá vỡ vấn đề nghiệp vụ là gì?
A. Tăng tính linh hoạt và mở rộng của hệ thống phần mềm
B. Giảm độ phức tạp của hệ thống phần mềm
C. Tối ưu hóa hiệu suất của hệ thống phần mềm
==D. Phân tách một vấn đề lớn hơn thành các vấn đề nhỏ hơn mà các đơn vị logic giải pháp tương ứng có thể được xây dựng

Câu 6. Loại dịch vụ nào thường tương ứng với logic quy trình kinh doanh mục tiêu, bao gồm logic ghép nối các dịch vụ khác để hoàn thành nhiệm vụ?
==A. Task service
B. Microservice
C. Entity service
D. Utility service

Câu 7. Trong mô hình REST, tài nguyên được đại diện bởi gì?
==A. URI (Uniform Resource Identifier)
B. URL (Uniform Resource Locator)
C. HTML (HyperText Markup Language)
D. XML (eXtensible Markup Language)

Câu 8. Phương thức HTTP nào thường được sử dụng để truy xuất tài nguyên từ dịch vụ RESTful?
==A. GET
B. PUT
C. POST
D. DELETE

Câu 9. Trong quy trình mô hình hóa web service, ứng viên dịch vụ nào được xác định đầu tiên?
==A. Entity service
B. Task service
C. Microservice
D. Utility Service

Câu 10. Namespaces cần được quản lý cẩn thận để làm gì?
==A. Tránh xung đột
B. Tăng tốc độ xử lý
C. Giảm chi phí phát triển
D. Tăng tính bảo mật

Câu 11. Điều gì cần được đảm bảo trước khi thực hiện mở rộng một hợp đồng dịch vụ?
A. Tính nhất quán và dự đoán của SOA
B. Tính mở rộng của các khả năng dịch vụ
==C. Các tiêu chuẩn quản lý phiên bản đã được thiết lập
D. Tính mở rộng của phạm vi chức năng dịch vụ

Câu 12. Mối quan hệ giữa data granularity và số lượng dữ liệu được xử lý là gì?
==A. Càng chi tiết data granularit, thì càng ít dữ liệu được xử lý
B. Càng đơn giản data granularit, thì càng ít dữ liệu được xử lý
C. Data granularity không ảnh hưởng đến số lượng dữ liệu được xử lý
D. Data granularity không liên quan đến lượng dữ liệu

Câu 13. Which technology is often used for real-time streaming between services?
A. Redis
==B. Kafka
C. PostgreSQL
D. gRPC

Câu 14. Which messaging pattern is most suitable for broadcasting events to multiple services?
A. Request-Reply
B. Command
==C. Publish-Subscribe
D. Point-to-Point

Câu 15. What pattern ensures data consistency across microservices?
A. Domain event
B. Transaction script
C. Aggregate
==D. Saga

Câu 16. Which object-oriented design principle is encouraged for complex business logic?
A. Encapsulation
B. Inheritance
==C. Applying object-oriented design principles
D. Polymorphism

Câu 17. Which database strategy is most aligned with microservices?
A. Shared database for all services
B. Single monolithic database
==C. Database per service
D. In-memory only

Câu 18. What is the role of an API Gateway in microservices architecture?
A. To directly call databases
B. To store data
==C. To provide a single entry point and route requests
D. To manage UI layout

Câu 19. What is the primary purpose of a deployment pipeline in microservices architecture?
A. To manage version control
==B. To automate service deployment
C. To store container images
D. To build frontend interfaces

Câu 20. Which practice ensures that a microservice is always deployable to production?
A. Canary release
B. Blue/Green deployment
==C. Continuous integration
D. Rollback

Câu 21. What role do projections play in an event-sourced system?
A. They serve as backups of event logs
B. They enforce access control policies
==C. They transform events into queryable views
D. They update the command model

Câu 22. Which of the following best describes an event store?
A. A database for REST services
B. A service that sends push notifications
==C. A log of immutable events that represent state transitions
D. A cache for recent API responses

Câu 23. How can a gateway handle varied client needs efficiently?
A. Through DNS switching
B. By rejecting requests not from mobile
==C. Using backend for frontends or GraphQL
D. Using token refresh only

Câu 24. What is the challenge with having a one-size-fits-all API in microservices?
A. It is always slower than direct DB queries
B. It requires GraphQL
==C. Different clients have different data needs and network constraints
D. It reduces reusability of services

Câu 25. Which technology is often used for real-time streaming between services?
A. Redis
==B. Kafka
C. PostgreSQL
D. gRPC

Câu 26. Why is idempotency important in asynchronous communication?
A. To increase bandwidth
B. To reduce latency
==C. To ensure reliable retries
D. To optimize caching

Câu 27. Which mechanism is commonly used to propagate domain changes to query models?
A. HTTP polling
B. Direct database replication
==C. Domain events and messaging
D. API Gateway transforms

Câu 28. What is a major challenge when implementing denormalized read models?
A. They slow down read operations
B. They make microservices loosely coupled
==C. They require syncing across many events and potential duplication
D. They increase security

Câu 29. Which of the following best describes a SAGA pattern in microservices?
A. A way to encrypt transactions
==B. A distributed sequence of local transactions with compensations
C. A batch transaction handler
D. A fallback mechanism for HTTP errors

Câu 30. Which protocol is traditionally used in centralized transaction coordination?
A. HTTP
B. gRPC
==C. Two-Phase Commit
D. REST

Câu 31. Dịch vụ dựa trên SOAP hay REST tốt hơn cho ứng dụng đơn giản?
==A. REST
B. SOAP
C. Tùy thuộc vào ứng dụng
D. SOAP và REST đều có thể được sử dụng cho ứng dụng đơn giản

Câu 32. Dịch vụ dựa trên SOAP hay REST dễ phát triển hơn?
A. SOAP
==B. REST
C. Tùy thuộc vào kỹ năng của nhà phát triển cụ thể
D. SOAP và REST đều dễ phát triển

Câu 33. Cho đoạn mã nguồn:
@Path("/products")
public class ProductResource {
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public Response getProducts() {
        // Get all products from the database.
        return Response.ok(products).build();
    }
    @POST
    @Consumes(MediaType.APPLICATION_XML)
    public Response createProduct(Product product) {
        // Create a new product in the database.
        return Response.ok().build();
    }
    @PUT
    @Path("{id}")
    @Consumes(MediaType.MULTIPART_FORM_DATA)
    public Response updateProduct(@PathParam("id") long id, Product product) {
        // Update the product with the given ID in the database.
        return Response.ok().build();
    }
    @DELETE
    @Path("{id}")
    public Response deleteProduct(@PathParam("id") long id) {
        // Delete the product with the given ID from the database.
        return Response.ok().build();
    }
}
HTTP Request nào sẽ được chuyển cho getProducts () ?
A. Phương thức POST, đường dẫn /products
B. Phương thức PUT, đường dẫn /products
C. Phương thức GET, đường dẫn /products/15
D. Phương thức GET, đường dẫn /products
==D. Phương thức GET, đường dẫn /products

Câu 34. Cho đoạn mã nguồn:
@Path("/products")
public class ProductResource {
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public Response getProducts() {
        // Get all products from the database.
        return Response.ok(products).build();
    }
    @POST
    @Consumes(MediaType.APPLICATION_XML)
    public Response createProduct(Product product) {
        // Create a new product in the database.
        return Response.ok().build();
    }
    @PUT
    @Path("{id}")
    @Consumes(MediaType.MULTIPART_FORM_DATA)
    public Response updateProduct(@PathParam("id") long id, Product product) {
        // Update the product with the given ID in the database.
        return Response.ok().build();
    }
    @DELETE
    @Path("{id}")
    public Response deleteProduct(@PathParam("id") long id) {
        // Delete the product with the given ID from the database.
        return Response.ok().build();
    }
}
Kiểu dữ liệu phản hồi của phương thức getProducts() là gì?
A. text/plain
B. application/json
C. application/xml
D. image/jpeg
==B. application/json

Câu 35. Cho đoạn mã nguồn:
@Path("/products")
public class ProductResource {
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public Response getProducts() {
        // Get all products from the database.
        return Response.ok(products).build();
    }
    @POST
    @Consumes(MediaType.APPLICATION_XML)
    public Response createProduct(Product product) {
        // Create a new product in the database.
        return Response.ok().build();
    }
    @PUT
    @Path("{id}")
    @Consumes(MediaType.MULTIPART_FORM_DATA)
    public Response updateProduct(@PathParam("id") long id, Product product) {
        // Update the product with the given ID in the database.
        return Response.ok().build();
    }
    @DELETE
    @Path("{id}")
    public Response deleteProduct(@PathParam("id") long id) {
        // Delete the product with the given ID from the database.
        return Response.ok().build();
    }
}
Kiểu dữ liệu cho yêu cầu của phương thức createProduct() là gì?
A. text/plain
B. application/json
C. application/xml
D. image/jpeg
==C. application/xml

Câu 36. WSDL là viết tắt của từ gì?
A. Web Service Description Language
B. Web Services Design Language
C. Web System Definition Language
==D. Web Service Definition Language

Câu 37. Trong WSDL, phần service dùng để làm gì?
==A. Mô tả cách truy cập và sử dụng các phương thức của web service
B. Chứa các tài nguyên của web service
C. Chứa các thư viện lập trình
D. Chứa các tài liệu hướng dẫn

Câu 38. Cho định nghĩa WSDL:
<?xml version="1.0" encoding="UTF-8"?>
<definitions ...>
    ...
    <portType name="AccountRegistrationPortType">
        <operation name="RegisterAccount">
            <input message="tns:RegisterAccount"/>
            <output message="tns:RegisterAccountResponse"/>
        </operation>
    </portType>
    ...
</definitions>
Đâu là phương thức mà dịch vụ cung cấp ?
A. Register
B. AccountRegistrationPortType
C. RegisterAccount
D. AccountRegistrationService
==C. RegisterAccount

Câu 39. Cho định nghĩa WSDL:
<wsdl:definitions ...>
    ...
    <wsdl:service name="OnlineChargingService">
        <wsdl:port name="OnlineChargingPort" binding="tns:OnlineChargingBinding">
            <soap:address location="http://www.example.com/onlinecharging" />
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>
Thực thi dịch vụ tên gì?
A. CustomerPortType
B. OnlineChargingBinding
C. OnlineChargingPortType
D. OnlineChargingService
==D. OnlineChargingService

Câu 40. Cho định nghĩa WSDL:
<?xml version="1.0" encoding="UTF-8"?>
<definitions ...>
    <message name="RegisterAccount">
        <part name="parameters" element="tns:Account"/>
    </message>
    <message name="RegisterAccountResponse">
        <part name="parameters" element="tns:AccountResponse"/>
    </message>
    <portType name="AccountRegistrationPortType">
        <operation name="RegisterAccount">
            <input message="tns:RegisterAccount"/>
            <output message="tns:RegisterAccountResponse"/>
        </operation>
    </portType>
    ...
</definitions>
Thông điệp đầu ra tên là gì ?
A. Account
B. RegisterAccount
C. AccountResponse
D. RegisterAccountResponse
==D. RegisterAccountResponse